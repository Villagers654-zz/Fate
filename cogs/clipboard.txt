
["When the Stars Fall", "Fuck the battle cat", "Woah. . .", "MrBoom10 is Online!", "Heil Sharp 5!", "Sponsored by Samsung", "FBI OPEN UP", "Gapple up", "iLiKe NuT", "All heil nut", "The 7 SR Fags", "ToTheR iS goD", "Fly on Fly off", "Ripperoni pepperoni", "Mayfly!", "Legit Anarchy!", "TotherIsTostitos", "Legit has been muted", "#Free Legit", "Now better than 2p2e!", "6 million juice", "Maps are the best", "7th team lgbt", "elon's musk", "Virtual Daycare", "Time Ticks On", "HeckaGuide was here", "fite me", "fortnut sucks", "7tm Surpreme", "ZR", "Half Life 3", "HI MOM", "no u", "HeckuvaGuide", "NANI?!?", "HA BEAT YA TO IT", "a war in motd", "Hawhatalooser", "obliviscancer", "YEET to DELETE", "You have aids", "ifyoucantbeatitYEETit", "Let’s grab our paint sets", "Communism", "T O T H E R", "FishyBear", "baccacito", "Why so serious?", "disabled due to a exploit", "mikey big gay", "juice wrld", "Huggably rapably fresh", "♡Juice wrld♡", "0/10 meme", "xJuice Wrld", "PURGE THE INFIDELS", "Niggatry", "This shit is not secure", "The Security is Shit", "They need the sack", "Tomato juice!", "Thready = bae", "Send Luck Loli Hentai", "Pole-Man", "Disbanded", "Privileged", "Threadys Republic", "Homiesexual", "Digital Daycare", "IM BACK!!!", "u got food?", "Thready = god 3xpl01ter", "poleman is bae", "The Fuckening", "ANIMOO", "MrBoom10 had the closest base to 0,0", "isthismotdgood", "where's the food", "bettter Believe it's not butter", "Lmao", "Illuminati confirmed", "Cool Story Bro", "It's a dirty liar", "Fate is a hoe", "4B4T", "Fate=Garden tool", "<Gay", "Fate is a slut", "Abuse", "Kool Kidz Klub", "Ewwww", "FREE CANDY", "SeNd NuDeS", "SeNd CoRdS", "It's a block game", "it's a small world", "Beat the Meat", "Hey that's mine", "VFD", "D A B", "ChairyChairChair", "I will beat luck", "MotdKing", "I'll be here all day", "Wait I'm busy", "Sorry Luck", "Over 9000!", "You would not believe your eyes", "Despaciti", "Despacito", "All hail plankton", "Pubg", "Plus Ultra!", "The Cake is a lie", "Half Life 3 confirmed", "OG", "Hi Mom!", "WektWabbitPlayz", "Mad cuz Bad", "Mincecraft"  "Memes", "Sky Banana", "Reee?", "The community isn't the same", "Mother of the devil", "Do your homework", "The base dropped harder than my grades", "All the other kids", "According to all known laws of aviation", "Fate want sucky sucky?", "It's not a phase mom", "Aliens.", "CookieToast", "Fortnite is gay", "Madness?", "This is madness", "This is Sparta!", "This is Anarchy!", "2+2 is... 10", "Quest for Cake", "the big lesbian is coming", "Powered by Beddys ego", "Art", "A MAJESTIC FUCKING EAGLE", "WhyAmIStillGettingHate", "Fateisemo", "FateisBait", "Brickr Ban Book", "Emo", "Burn it with fire", "2 Steves 1 block", "red pancakes", "2 letters E Z", "PG-13", "Beat Your Meat 2", "EVERYONE IS HERE", "Sponsored by Walmart", "5b5t", "7B7T", "I didn't do it", "Bye have a great tiem", "OwO", "Jake from State farm", "Capitalism", "Sorry Fam", "Trust No One", "It only takes one player", "4b4t java fags found us", "I'm back", "depresso expresso", "Heck=motd king", "Poleman is back Mikey", "ISAWEDTHISBOSTINHALF", "Triiiiiipaloski", "#gaslegit", "This is Patrick", "FD", "Kill Yourself Wait Please Don't", "Faggotry", "Waffles", "Blue Waffles", "red pancakes", "moooore", "With a Portuguese Breakfast", "The Motd King has arrived", "Bow down faggots", "NO U", "Oh Snap", "Shits going down", "Gone Sexual", "we are burning this town", "Gone Wrong"]

		embed.add_field(name="+ICI Commands", value="+ICI leavepls +AH4 `insists on someone leaving`+AFw-n+ICI disgust +AH4 `extreem dislike towards someone`+AFw-n+ICI angery +AH4 `expresses deep anger`+AFw-n+ICI admire +AH4 `admires something/one`+AFw-n+ICI shrug +AH4 `sends a random shrug gif`+AFw-n+ICI thonk +AH4 `concern for ones mental health`+AFw-n+ICI yawn +AH4 `sends a random yawn gif`+AFw-n+ICI wine +AH4 `sends a random wine gif`+AFw-n+ICI sigh +AH4 `sends a random sigh gif`+AFw-n+ICI hug +AH4 `hugs a person`", inline=False)

channel = self.bot.get_channel(514213558549217330)
path = os.getcwd() + "/data/" + random.choice(os.listdir(os.getcwd() + "/data/"))
f = open(path + "error.txt", "w")
f.write('Ignoring exception in command {}:'.format(ctx.command), file=sys.stderr)
f.close()
f = open(path + "error.txt", "r")
await channel.send(f.read())



		async def on_message(self, msg: discord.Message):
			if msg.content.startswith("<@361178730564943873>"):
				await msg.channel.send("Preparing ritual")
				await msg.channel.send(" 10%")
				await msg.channel.send(" 25%")
				await msg.channel.send(" 40%")
				await msg.channel.send(" 100%")
				await msg.channel.send("Preparation completed.")
				await msg.channel.send("Summoning Beddy")
				await msg.channel.send("Error, we've encountered a fatal flaw")
				await msg.channel.send("Attempting recovery")
				await msg.channel.send("Autism unavoidable..")
				await msg.channel.send("Activating counter, come forth Airborne.")
				await msg.channel.send("Virus detected")
				await msg.channel.send("Running scan..")
				await msg.channel.send(
					"Theres a dead program by the name of 8th Shazian Meme Supreme running in the background.. attemping to delete")
				await msg.channel.send(
					"Fatal error, Luck has activated __**Rules**__, deletion command is henceforth void.")
				await msg.channel.send("Importing The Resistance..")
				await msg.channel.send("Import overwritten by harm 2 arrows")
				await msg.channel.send("Insisting on admin intervention")
				await msg.channel.send("Protocall ban harm 2 arrows was a success, time to start the #vanillarebellion")

				print('Ignoring exception in command {}:'.format(ctx.command), file=sys.stderr)
				traceback.print_exception(type(error), error, error.__traceback__, file=sys.stderr)
				await ctx.send(error)

				async def on_message(self, m: discord.Message):
					if m.author.id == 529287770233896961:
						pass
					else:
						if m.channel.id == 531350870445785091:
							def pred(m):
								return msg.author.id in [
									529287770233896961] and m.channel == 531350870445785091 and m.content in msg.content

							try:
								msg = await self.bot.wait_for('message', check=pred, timeout=10.0)
							except asyncio.TimeoutError:
								await self.bot.get_user(261451679239634944).send("Livechat is down")
								await self.bot.get_user(264838866480005122).send("Livechat is down")
							except Exception as e:
								pass
							else:
								if m.author.id not in [531350870445785091]:
									await m.delete()
					if m.channel.id == 529705827716825098:
						if m.content.startswith("**["):
							pass
						else:
							try:
								await asyncio.sleep(15)
								await m.delete()
							except Exception as e:
								pass
						if m.author.id not in [531350870445785091]:
							try:
								await asyncio.sleep(15)
								await m.delete()
							except Exception as e:
								pass

							async for m in channel.history(limit=1):
								if msg.content.lower() in m.content.lower():
									pass
								else:

				stuff = (f'--------------------------\n'
				         f'Logged in as\n'
				         f'bot.user.name\n'
				         f'bot.user.id\n'
				         f'Extensions: {len(bot.extensions)}\n'
				         f'Errors: {errorcount}\n'
				         f'--------------------------\n'
				         f' ζξ Welcome back Mikey :)\n'
				         f'┌──┬┐ The best way to start\n'
				         f'│  ├┘ your day is with the\n'
				         f'└──┘ blood of your enemys\n'
				         f'--------------------------')

				['cogs.error_handler', 'cogs.owner', 'cogs.menus', 'cogs.core', 'cogs.mod', 'cogs.music',
				 'cogs.welcome', 'cogs.farewell', 'cogs.notes', 'cogs.archive',
				 'cogs.coffeeshop', 'cogs.custom', 'cogs.actions', 'cogs.reactions', 'cogs.responses', 'cogs.textart',
				 'cogs.fun', 'cogs.math', 'cogs.dev', 'cogs.4b4t',
				 'cogs.readme', 'cogs.legit', 'cogs.reload', 'cogs.embeds', 'cogs.manager', 'cogs.profiles']

				print('Failed to load extension' + cog, file=sys.stderr)
				traceback.print_exc()

				if m.channel.id == 531350870445785091:
					if m.content.startswith("**["):
						pass
					else:
						try:
							await asyncio.sleep(15)
							await m.delete()
						except Exception as e:
							pass

				e.add_field(name="◈ Memory ◈", value=f'__**Storage**__: [{bytes2human(storageused)}/{bytes2human(storagetotal)}]\n__**RAM**__: **Global**: {bytes2human(ramused)} **Bot**: {bytes2human(botram)}\n__**CPU**__: **Global**: {psutil.cpu_percent(interval=1)}% **Bot**: {p.cpu_percent(interval=1.0)}%\n__**CPU Frequency**__: {bytes2human(freq)}')
				e.set_footer(text=psutil.cpu_percent(interval=1, percpu=True))

				@commands.command(pass_context=True)
				async def ud(self, ctx, *, query: str):
					url = "http://www.urbandictionary.com/define.php?term={}".format(query.replace(" ", "%20"))
					async with aiohttp.ClientSession() as sess:
						async with sess.get(url) as resp:
							r = await resp.read()
					resp = bs(r, 'html.parser')
					try:
						if len(resp.find('div', {'class': 'meaning'}).text.strip('\n').replace("\u0027", "'")) >= 1000:
							meaning = resp.find('div', {'class': 'meaning'}).text.strip('\n').replace("\u0027", "'")[
							          :1000] + "..."
						else:
							meaning = resp.find('div', {'class': 'meaning'}).text.strip('\n').replace("\u0027", "'")
						await ctx.send(":mag:**{0}**: \n{1}\n\n**Example**: \n{2}\n\n**~{3}**".format(query, meaning,
						                                                                              resp.find('div', {
							                                                                              'class': 'example'}).text.strip(
							                                                                              '\n'),
						                                                                              resp.find('div', {
							                                                                              'class': 'contributor'}).text.strip(
							                                                                              '\n')))
					except AttributeError:
						await ctx.send(
							"Either the page doesn't exist, or you typed it in wrong. Either way, please try again.")
					except Exception as e:
						await ctx.send(f'**```ERROR: {type(e).__name__} - {e}```**')

				async def on_message(self, msg: discord.Message):
					if msg.content.startswith("<@517478945747107840>"):
						await msg.channel.send(random.choice(['response 1', 'response 2']))
					if msg.content.startswith("this is how you format it to add another response to messages"):
						await msg.channel.send("and this is what it'll send")

				@commands.command()
				async def tomato(self, ctx):
					e = discord.Embed(description="Status: eaten by NaziNig", color=0xFF0000)
					e.set_author(name="| Thready",
					             icon_url="https://cdn.discordapp.com/avatars/243182786909962251/4dbe7d781f07d0b42bfcbab98da4e1a8.webp?size=1024")
					e.add_field(name="• Gender", value="male irl female online", inline=False)
					e.add_field(name="• Motto", value="50/50", inline=False)
					await ctx.send(embed=e)

				m.content = m.content.lower()
				r = random.randint(1, 8)
				if "<@506735111543193601>" in m.content:
					await m.channel.send(random.choice([]))
				if m.content.startswith("sponsered by totherbot"):
					await m.channel.send(random.choice([]))
				if m.content.startswith("ew, fates here?"):
					await m.channel.send(random.choice([]))
				if "please, stop harrasing my bot" in m.content:
					await m.channel.send()
				if m.content.startswith("<@452289354296197120>"):
					await m.channel.send("Sponsored by FateBot")
				if str(m.guild.id) not in self.responses:
					self.responses[str(m.guild.id)] = 'enabled'
					with open("./data/config/toggles.json", "w") as outfile:
						json.dump({"responses": self.responses}, outfile, ensure_ascii=False)
				if self.responses[str(m.guild.id)] == 'enabled':
					if r >= 7:
						if m.content.startswith("hello"):
							await m.channel.send(
								random.choice([]))
						if m.content.startswith("gm"):
							await m.channel.send(
								random.choice([]))
						if m.content.startswith("gn"):
							await m.channel.send(random.choice(["Gn", "Gn :3", "Night", "Nighty"]))
						if "dead" in m.content:
							await m.channel.send("Dead like ur social status")
						if m.content.startswith("ree"):
							await m.channel.send(random.choice([]))
						if m.content.startswith("kys"):
							await m.channel.send(random.choice([]))

				@commands.command()
				async def cortex(self, ctx):
					e = discord.Embed(title="🅱️OrTeXpE", color=0x000001)
					e.set_thumbnail(
						url="https://cdn.discordapp.com/attachments/488907808612417549/503429106570887168/-666.jpg")
					e.add_field(name="• pRoGrAmMeR",
					            value="• skills ~ `totally undefined`\n• occupation ~ `sTriPpEr aT cOdErS' caFé`",
					            inline=False)
					e.add_field(name="• Decription",
					            value="Sí, sabes que ya llevo un rato mirándote\nTengo que bailar contigo hoy (DY)\nVi que tu mirada ya estaba llamándome\nMuéstrame el camino que yo voy (Oh)",
					            inline=False)
					e.add_field(name="• Gender", value="manbearpig", inline=False)
					e.add_field(name="• Motto", value="autism is a choice", inline=False)
					await ctx.send(embed=e)

				# ~~== Teams ==~

				@commands.command()
				async def fairytail(self, ctx):
					e = discord.Embed(description="Powered by the souls of its members", color=0x80b0ff)
					e.set_thumbnail(
						url="https://cdn.discordapp.com/attachments/501871950260469790/504183333270323201/816JppdbwUL._SL1015_.jpg")
					e.set_author(name="Fairy Tail",
					             icon_url="https://cdn.discordapp.com/attachments/502236124308307968/504183717560844289/4-1.png")
					e.add_field(name="◈ FAQ ◈",
					            value="• The name of 'Fairy Tail' represents a sense of adventure for one to be able to discover more about mysteries and fate.",
					            inline=False)
					e.add_field(name="◈ Requirements ◈", value="• Undefined", inline=False)
					e.add_field(name="◈ Rules ◈",
					            value="• If a member leaves Fairy Tail, they must swear to abide by 3 rules:\n1. You should never share sensitive information about Fairy Tail with anyone for as long as you live.\n2. You must never contact past clients you may have worked for while in the guild, for your own personal gain.\n3. Although our path must stray, promise to live rest of your life to the fullest. That means you must treat everyday like it was your last day in this world. Never forget your Fairy Tail friends you loved, you must treasure them for as long as you live.",
					            inline=False)
					await ctx.send(embed=e)

			if message.content.starts_with("https://discord"):
				await message.channel.send(random.choice(['*adblock strikes again*', 'no adverts for you nigtard', 'alright faggot, stop trying', 'desperation suits you']))
				await channel.send(f'failed to parse faggotry from {message.author.name}')
				if message.content.sarts_with("discord.gg"):
					await message.channel.send(random.choice(['*adblock strikes again*', 'no adverts for you nigtard', 'alright faggot, stop trying', 'desperation suits you']))
					await channel.send(f'failed to parse faggotry from {message.author.name}')

		async def on_message(self, message: discord.Message):
			if not message.author.bot:
				if message.guild.id == 470961230362837002:
					e = discord.Embed()
					e.set_author(name=message.author.name, icon_url=message.author.avatar_url)
					e.description = message.content
					await message.channel.send(embed=e)
					await message.delete()

	async def on_command_error(self, e, message: discord.Message):
		if isinstance(e, (commands.errors.BadArgument, commands.errors.MissingRequiredArgument)):
			await message.channel.send(":x: Bad argument: {}".format(" ".join(e.args)))
			return
		elif isinstance(e, commands.errors.CheckFailure):
			await message.channel.send(":x: Check failed. You probably don't have permission to do this.")
			return
		elif isinstance(e, commands.errors.CommandNotFound):
			return
		else:
			await message.channel.send(":no_entry: An error happened. This has been logged and reported.")
			if isinstance(e, commands.errors.CommandInvokeError):
				traceback.print_exception(type(e), e.__cause__, e.__cause__.__traceback__, file=sys.stderr)
			else:
				traceback.print_exception(type(e), e, e.__traceback__, file=sys.stderr)


		if message.channel.name == "console":
			if message.author.id == 264838866480005122:
				try:
					p = subprocess.Popen(message.content, stdout=subprocess.PIPE, shell=True)
					await asyncio.sleep(1)
					(output, err) = p.communicate()
					await message.channel.send(f'```{output}```', delete_after=20)
					await asyncio.sleep(20)
					await message.delete()
				except Exception as e:
					await message.channel.send(e, delete_after=20)
					await asyncio.sleep(20)
					await message.delete()
			else:
				if not message.author.id == 506735111543193601:
					await message.channel.send("```ERROR: Access Denied```", delete_after=20)
					await asyncio.sleep(20)
					await message.delete()

	@commands.command()
	async def antilog(self, ctx, times: int, content='spamming'):
		for i in range(times):
			message = await ctx.send(".")
			await message.edit(content=f"..")
			await message.edit(content=f"...")
			await message.edit(content=f"....")
			await message.edit(content=f".....")
			await message.edit(content=f"....")
			await message.edit(content=f"...")
			await message.edit(content=f"..")
			await message.edit(content=f".")
			await message.edit(content=f"..")
			await message.edit(content=f"...")
			await message.edit(content=f"....")
			await message.edit(content=f".....")
			await message.edit(content=f"....")
			await message.edit(content=f"...")
			await message.edit(content=f"..")
			await message.edit(content=f".")
			await message.edit(content=f"..")
			await message.edit(content=f"...")
			await message.edit(content=f"....")
			await message.edit(content=f".....")
			await message.edit(content=f"....")
			await message.edit(content=f"...")
			await message.edit(content=f"..")
			await message.edit(content=f".")
			
	@commands.command()
	async def antilog(self, ctx):
		message = await ctx.send(".")
		await message.edit(content=f"..")
		await message.edit(content=f"...")
		await message.edit(content=f"....")
		await message.edit(content=f".....")
		await message.edit(content=f"....")
		await message.edit(content=f"...")
		await message.edit(content=f"..")
		await message.edit(content=f".")
		await message.edit(content=f"..")
		await message.edit(content=f"...")
		await message.edit(content=f"....")
		await message.edit(content=f".....")
		await message.edit(content=f"....")
		await message.edit(content=f"...")
		await message.edit(content=f"..")
		await message.edit(content=f".")
		await message.edit(content=f"..")
		await message.edit(content=f"...")
		await message.edit(content=f"....")
		await message.edit(content=f".....")
		await message.edit(content=f"....")
		await message.edit(content=f"...")
		await message.edit(content=f"..")
		await message.edit(content=f".")

# responses m

from discord.ext import commands
import discord
import random
import ctx

class responsesclass:
    def __init__(self, bot):
        self.bot = bot

    def luck(ctx):
        return ctx.message.author.id == 264838866480005122

# ~== Test ==~

    @commands.command()
    @commands.check(luck)
    async def cogs_bot_responses(self, ctx):
        await ctx.send('working')

# ~== Main ==~

    @asyncio.coroutine
    async def http_get_json(self, url: str, headers: dict = BASE_REQUEST_HEADER):
	    async with aiohttp.ClientSession() as cs:
		    async with cs.get(url, headers=headers) as r:
			    resp = await r.json()
			    await cs.close()
			    return resp

    async def on_message(self, message: discord.Message):
        if not message.author.bot:
            if message.content.startswith("Hello"):
                await message.channel.send(random.choice(["Hello", "Hello :3", "Suh", "Suh :3", "Wazzuh"]))
            if message.content.startswith("hello"):
                await message.channel.send(random.choice(["Hello", "Hello :3", "Suh", "Suh :3", "Wazzuh"]))
            if message.content.startswith("Gm"):
                await message.channel.send(random.choice(["Gm", "Gm :3", "Morning", "Morning :3", "Welcome to heaven"]))
            if message.content.startswith("gm"):
                await message.channel.send(random.choice(["Gm", "Gm :3", "Morning", "Morning :3", "Welcome to heaven"]))
            if message.content.startswith("Gn"):
                await message.channel.send(random.choice(["Gn", "Gn :3", "Night", "Nighty"]))
            if message.content.startswith("gn"):
                await message.channel.send(random.choice(["Gn", "Gn :3", "Night", "Nighty"]))
            if message.content.startswith("Ree"):
                await message.channel.send(random.choice(["Depression Strikes Again", "Would you like an espresso for your depresso", "You're not you when you're hungry", "Tfw you realise flies get laid more than you^", "*crippling depression*", "Really? That's the sperm that won?", "Breakdown sponsored by Samsung", "pUrE wHiTe pRiVelIdgEd mALe", "there's a wasp sucking out all your stick juices"]))
            if message.content.startswith("ree"):
                await message.channel.send(random.choice(["Depression Strikes Again", "Would you like an espresso for your depresso", "You're not you when you're hungry", "Tfw you realise flies get laid more than you^", "*crippling depression*", "Really? That's the sperm that won?", "Breakdown sponsored by Samsung", "pUrE wHiTe pRiVelIdgEd mALe", "there's a wasp sucking out all your stick juices"]))


        @commands.command()
	@commands.cooldown(commands.BucketType.user)
	async def themesong(self, ctx):
		user = self.bot.get_user(arg)
		e=discord.Embed(description="{}".format(random.choice(["link1", "link2"]), color="{}".format(random.choice(["FF0000", "FF7F00", "FFFF00", "00FF00", "0000FF", "4B0082"])))
		e.set_author(name=user.name, icon_url=user.avatar_url)
		await ctx.send(embed=e)

	@commands.command()
	async def lmgtfy(self, *, query: str):
		msg = query.replace(" ", "+")
		msg = "http://lmgtfy.com/?q={}".format(msg)
		await self.bot.say(msg)

		async def on_message(self, message: discord.Message):
			print(f'[{message.guild.name}] {message.author.name}: {message.content}')

		def setup(bot):
    bot.add_cog(responsesclass(bot))
    
	@commands.command()
	async def ritual(self, ctx):
		message = await ctx.send("beginning ritual")
		await message.edit("█▒▒▒▒▒▒▒▒▒ 10%")
		await message.edit("██▒▒▒▒▒▒▒▒ 20%")
		await message.edit("███▒▒▒▒▒▒▒ 30%")
		await message.edit("████▒▒▒▒▒▒ 40%")
		await message.edit("█████▒▒▒▒▒ 50%")
		await message.edit("██████▒▒▒▒ 60%")
		await message.edit("███████▒▒▒ 70%")
		await message.edit("████████▒▒ 80%")
		await message.edit("█████████▒ 90%")
		await message.edit("██████████ 100%")
		
	async def on_message(self, msg: discord.Message):
		if msg.content.startswith("<@361178730564943873>"):
			await msg.channel.send("Preparing ritual")
			await msg.channel.send("█▒▒▒▒▒▒▒▒▒ 10%")
			await msg.channel.send("███▒▒▒▒▒▒▒ 25%")
			await msg.channel.send("█████▒▒▒▒▒ 40%")
			await msg.channel.send("██████████ 100%")
			await msg.channel.send("Preparation completed.")
			await msg.channel.send("Summoning Beddy")
			await msg.channel.send("Error, we've encountered a fatal flaw")
			await msg.channel.send("Attempting recovery")
			await msg.channel.send("Autism unavoidable..")
			await msg.channel.send("Activating counter, come forth Airborne.")
			await msg.channel.send("Virus detected")
			await msg.channel.send("Running scan..")
			await msg.channel.send("Theres a dead program by the name of 8th Shazian Meme Supreme running in the background.. attemping to delete")
			await msg.channel.send("Fatal error, Luck has activated __**Rules**__, deletion command is henceforth void.")
			await msg.channel.send("Importing The Resistance..")
			await msg.channel.send("Import overwritten by harm 2 arrows")
			await msg.channel.send("Insisting on admin intervention")
			await msg.channel.send("Protocall ban harm 2 arrows was a success, time to start the #vanillarebellion")

		e.add_field(name="", value="", inline=True)
